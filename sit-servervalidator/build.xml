<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="sit-servervalidate">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
	
    <path id="lib.classpath">
    	<fileset dir="lib">
    		<include name="*.jar"/>
	    </fileset>        
    </path>
	
	<path id="sit-servervalidate.classpath">
		<path refid="lib.classpath"/>
	</path>
	
    <target name="init">
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            	<not>
					<filename name="addValidate-server-validatorx.xml"/>
            	</not>
            	<not>
					<filename name="default-server-validatorx-string-list-map.xml"/>
				</not>
				<not>
					<filename name="default-server-validatorx.xml"/>
				</not>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build/classes"/>
    </target>

	<target name="clean-test-classes">
		<delete dir="build/classes/test"/>
	</target>
			
	<target depends="clean, init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}" encoding="UTF-8">
            <src path="src"/>
            <classpath refid="sit-servervalidate.classpath"/>
        </javac>
    </target>

    <target name="build" depends="build-project, clean-test-classes">
        <jar destfile="sit-servervalidate-${env.SIT_VERSION}.jar" basedir="build/classes">
    	</jar>
    </target>
</project>
